{"pageProps":{"title":"Creating my own logs collector","tags":["NodeJS"],"publishedOn":"2021-08-28T12:36:45.620Z","dirName":"post3_creating_my_own_logs_collector","content":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,t,o)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,n=(e,t)=>{for(var o in t||(t={}))i.call(t,o)&&s(e,o,t[o]);if(l)for(var o of l(t))p.call(t,o)&&s(e,o,t[o]);return e},r=(e,t)=>d(e,g(t));var h=(e,t)=>{var o={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(o[a]=e[a]);if(e!=null&&l)for(var a of l(e))t.indexOf(a)<0&&p.call(e,a)&&(o[a]=e[a]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var a=o,{components:e}=a,t=h(a,[\"components\"]);return mdx(MDXLayout,r(n(n({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`In this post I will describe why I created my own logs collector instead of\nusing something that already exists and how it works.`),mdx(\"h2\",null,\"Overview\"),mdx(\"p\",null,`I came to the conclusion that I need a single place from where to be able to\nsee all the logs of all the apps that I manage. After searching the vast\ninternet and trying different solutions I couldn't find a good tool for my\nuse case. There are many good tools out there, but not for what I needed.`),mdx(\"p\",null,\"For my case I needed an application that could:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"use low resources on the processing side;\"),mdx(\"li\",{parentName:\"ul\"},\"fast on the client side;\"),mdx(\"li\",{parentName:\"ul\"},\"be able to still use the classical way of logging (to a console) without a hassle;\")),mdx(\"p\",null,\"For this I created 3 packages:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"logs processing app\"),\": an application that will process the raw logs;\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"logs catcher app\"),\": an application that will receive the raw logs from all the applications and send them to the application that will process them;\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"client\"),\": the package that will send the logs of the application to the \",mdx(\"inlineCode\",{parentName:\"li\"},\"logs catcher app\"),\".\")),mdx(\"p\",null,\"$ the formmat of logs\"),mdx(\"p\",null,\"$ the transport of logs from client to logs catcher app through TCP\"),mdx(\"p\",null,\"$ the storage of logs\"),mdx(\"p\",null,\"$ the client\"),mdx(\"p\",null,\"$ the logs catcher app\"),mdx(\"p\",null,\"$ the logs processing app\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"skip":1},"__N_SSG":true}