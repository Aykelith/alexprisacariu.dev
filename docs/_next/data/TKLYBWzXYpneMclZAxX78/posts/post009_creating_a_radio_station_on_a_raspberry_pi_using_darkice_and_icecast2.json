{"pageProps":{"title":"Creating a radio station on a Raspberry Pi using DarkIce and IceCast2","tags":["Linux","Raspberry Pi","Ubuntu","Audio"],"publishedOn":"2022-03-12T16:36:45.620Z","dirName":"post009_creating_a_radio_station_on_a_raspberry_pi_using_darkice_and_icecast2","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    div: \"div\",\n    pre: \"pre\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"At my church we offer translations to people who cannot speak romanian, but the\\r\\nsystem we are using is pretty low quality and is a lot of static noise and is\\r\\ntoo expensive to upgrade it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So I've thinked I would be able to use a Raspberry Pi 3, an audio interface and\\r\\nsome software to create a radio station that would then be hooked to the actual\\r\\nsystem.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After searching for some software that would work on Raspberry Pi 3 I\\r\\ndiscovered \", _jsx(_components.code, {\n        children: \"IceCast2\"\n      }), \" that would be able to create a radio station and using\\r\\n\", _jsx(_components.code, {\n        children: \"DarkIce\"\n      }), \" to send the live audio from the microphone to \", _jsx(_components.code, {\n        children: \"IceCast2\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"So I've booted \", _jsx(_components.code, {\n        children: \"Ubuntu 20.04\"\n      }), \" for Raspberry Pi and installed \", _jsx(_components.code, {\n        children: \"icecast2\"\n      }), \" from the\\r\\npackage manager.\\r\\nFor the \", _jsx(_components.code, {\n        children: \"darkice\"\n      }), \" the version from the package manager was \", _jsx(_components.strong, {\n        children: \"1.13\"\n      }), \", but the\\r\\nlatest available is \", _jsx(_components.strong, {\n        children: \"1.14\"\n      }), \" so I needed to compile it.  After some tries and\\r\\nsearching and found that needed to install \", _jsx(_components.code, {\n        children: \"ALSA\"\n      }), \" and compile another library,\\r\\n\", _jsx(_components.code, {\n        children: \"lame\"\n      }), \", because could not figure out how to configure \", _jsx(_components.code, {\n        children: \"darkice\"\n      }), \" to use the\\r\\ndeveloper package from the package manager I figure it out and built the latest\\r\\nversion of \", _jsx(_components.code, {\n        children: \"darkice\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After playing out with both the \", _jsx(_components.code, {\n        children: \"darkice\"\n      }), \" configuration and the \", _jsx(_components.code, {\n        children: \"icecast2\"\n      }), \"\\r\\nconfiguration I had a working radio station.\\r\\nThe only problem that I couldn't anticipated was that the latency was just too\\r\\nhigh for what I needed. I had around \", _jsx(_components.strong, {\n        children: \"5 to 10 seconds\"\n      }), \" of latency, which would\\r\\nbe quite perfect for a normal radio station, but not what I needed.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So here are the complet steps that I followed:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash  line-numbers\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Installing icecast2\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Installing ALSA utilities\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Installing pkgconfig required for `darkice` configuration\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Installing build-essentials for compiling `darkice` and `lame`\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"sudo\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"apt\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"install\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-y\"\n          }), \" icecast2 alsa-utils asound2 libasound2-dev pkgconfig build-essentials\\n\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Getting lame\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"wget\"\n          }), \" https://sourceforge.net/projects/lame/files/lame/3.100/lame-3.100.tar.gz\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"tar\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-xvf\"\n          }), \" lame-3.100.tar.gz\\n\", _jsx(_components.span, {\n            className: \"token builtin class-name\",\n            children: \"cd\"\n          }), \" lame-3.100\\n\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Configuring lame and building it\"\n          }), \"\\n./configure --with-fileio\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"lame --disable-gtktest --enable-expopt\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"full \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"--prefix\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"/usr\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"make\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"sudo\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"make\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"install\"\n          }), \"\\n\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Getting darkice\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"wget\"\n          }), \" https://github.com/rafael2k/darkice/releases/download/v1.4/darkice-1.4.tar.gz\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"tar\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-xvf\"\n          }), \" darkice-1.4.tar.gz\\n\", _jsx(_components.span, {\n            className: \"token builtin class-name\",\n            children: \"cd\"\n          }), \" darkice-1.4\\n\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Configuring darkice with ALSA and lame and building it\"\n          }), \"\\n./configure --with-alsa --with-lame\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"make\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"sudo\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"make\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"install\"\n          }), _jsxs(_components.span, {\n            \"aria-hidden\": \"true\",\n            className: \"line-numbers-rows\",\n            children: [_jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            })]\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I've used the default \", _jsx(_components.strong, {\n        children: \"hackme\"\n      }), \" password when I've installed \", _jsx(_components.code, {\n        children: \"icecast2\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The config for \", _jsx(_components.code, {\n        children: \"icecast2\"\n      }), \" can be found at \", _jsx(_components.code, {\n        children: \"/etc/icecast2/icecast.xml\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The configuration for \", _jsx(_components.code, {\n        children: \"darkice\"\n      }), \" saved in \", _jsx(_components.code, {\n        children: \"~/darkice.cfg\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash  line-numbers\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# this section describes general aspects of the live streaming session \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"general\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \\nduration     \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# duration of encoding, in seconds. 0 means forever \"\n          }), \"\\nbufferSecs   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# size of internal slip buffer, in seconds \"\n          }), \"\\nreconnect    \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"yes\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# reconnect to the server(s) if disconnected \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# this section describes the audio input that will be streamed \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"input\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \\ndevice          \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" plughw:1,0  \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Soundcard device for the audio input \"\n          }), \"\\nsampleRate      \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"22050\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# sample rate in Hz. try 11025, 22050 or 44100 \"\n          }), \"\\nbitsPerSample   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"16\"\n          }), \"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# bits per sample. try 16 \"\n          }), \"\\nchannel         \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"         \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# channels. 1 = mono, 2 = stereo \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# this section describes a streaming connection to an IceCast2 server \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# there may be up to 8 of these sections, named [icecast2-0] ... [icecast2-7] \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"icecast2-0\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \\nbitrateMode     \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" abr       \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# average bit rate \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"format\"\n          }), \"          \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" mp3       \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# format of the stream: ogg vorbis \"\n          }), \"\\nbitrate         \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"86\"\n          }), \"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# bitrate of the stream sent to the server \"\n          }), \"\\nserver          \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" localhost \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# host name of the server \"\n          }), \"\\nport            \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8000\"\n          }), \"      \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# port of the IceCast2 server, usually 8000 \"\n          }), \"\\npassword        \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" hackme \\nmountPoint      \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Stream.mp3  \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# mount point of this stream on the IceCast2 server \"\n          }), \"\\nname            \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Raspberry Pi Stream \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# name of the stream \"\n          }), \"\\ndescription     \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Broadcast from Raspberry Pi \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# description of the stream \"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"#public          = yes       advertise this stream?\"\n          }), _jsxs(_components.span, {\n            \"aria-hidden\": \"true\",\n            className: \"line-numbers-rows\",\n            children: [_jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            })]\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To found out the right device you can run arecord -l and will return all the\\r\\nrecording devices available. The card index is the first number, in my case 1\\r\\nand the device index is the second number, in my case 0.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The password field is the source-password from the icecast2  config.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And now, for starting everything we need first to start icecast2 by starting\\r\\nits service:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash  line-numbers\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"sudo\"\n          }), \" systemctl start icecast2\", _jsx(_components.span, {\n            \"aria-hidden\": \"true\",\n            className: \"line-numbers-rows\",\n            children: _jsx(_components.span, {\n              className: \"\"\n            })\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And then we run darkice with our config file:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash  line-numbers\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"sudo\"\n          }), \" darkice \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-c\"\n          }), \" ~/darkice.cfg\", _jsx(_components.span, {\n            \"aria-hidden\": \"true\",\n            className: \"line-numbers-rows\",\n            children: _jsx(_components.span, {\n              className: \"\"\n            })\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also create a service for darkice replacing the username with your\\r\\naccount username (line 8 and 14):\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash  line-numbers\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# /etc/systemd/system/darkice.service\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"Unit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"Description\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"Darkice \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"service\"\n          }), \"\\nAfter \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" network-online.target sound.target\\n\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"Service\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"Type\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"simple\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"User\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"ubuntu\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"ExecStartPre\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"/bin/sleep \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"StandardOutput\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"syslog\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"StandardError\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"syslog\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"SyslogIdentifier\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"darkice\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"WorkingDirectory\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"/\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"ExecStart\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"/usr/local/bin/darkice \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-c\"\n          }), \" /home/ubuntu/darkice.cfg\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"Restart\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"on-abort\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"CPUSchedulingPolicy\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"fifo\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"CPUSchedulingPriority\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), \"\\n\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"Install\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"WantedBy\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"multi-user.target\", _jsxs(_components.span, {\n            \"aria-hidden\": \"true\",\n            className: \"line-numbers-rows\",\n            children: [_jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            }), _jsx(_components.span, {\n              className: \"\"\n            })]\n          }), \"\\n\"]\n        })\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"skip":null},"__N_SSG":true}